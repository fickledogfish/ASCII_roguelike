#include "Enemy.hpp"

#include <stdexcept>
#include <iostream>
#include "Map.hpp"

bool Enemy::move(Map &current_map) {
    Direction d;

    if (Enemy::cannotMove(current_map))
        return true;

    // Randomly select a direction to move.
    int direct_int = rnd::random_int(0, 3);

    // translate the integer into a direction
    switch(direct_int) {
    case 0:
        d = Direction::UP;
        break;
    case 1:
        d = Direction::DOWN;
        break;
    case 2:
        d = Direction::LEFT;
        break;
    case 3:
        d = Direction::RIGHT;
        break;
    default:
        throw std::logic_error("Invalid direction generated by random_int.");
        break;
    }

    Coordinates future_pos = Enemy::virtualMovement(d);

    bool valid_move = Enemy::validateMove(current_map, future_pos);

    // and, finally, do the move
    if (valid_move) {
        Enemy::moveToDirection(d);
    }

    return valid_move;
}
